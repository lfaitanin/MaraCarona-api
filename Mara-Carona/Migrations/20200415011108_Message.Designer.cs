// <auto-generated />
using System;
using Mara_Carona.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Mara_Carona.Migrations
{
    [DbContext(typeof(Context.AppContext))]
    [Migration("20200415011108_Message")]
    partial class Message
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Mara_Carona.Models.Club", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("club");
                });

            modelBuilder.Entity("Mara_Carona.Models.Fixture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("clubId")
                        .HasColumnType("integer");

                    b.Property<int>("competitionid")
                        .HasColumnType("integer");

                    b.Property<DateTime>("date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("location")
                        .HasColumnType("text");

                    b.Property<int>("teamawayid")
                        .HasColumnType("integer");

                    b.Property<int>("teamhomeid")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("clubId");

                    b.ToTable("fixture");
                });

            modelBuilder.Entity("Mara_Carona.Models.Hub.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.Property<int?>("UserFromId")
                        .HasColumnType("integer");

                    b.Property<int?>("UserToId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserFromId");

                    b.HasIndex("UserToId");

                    b.ToTable("Message");
                });

            modelBuilder.Entity("Mara_Carona.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("UserTypeId")
                        .HasColumnType("integer");

                    b.Property<string>("adress")
                        .HasColumnType("text");

                    b.Property<int>("clubId")
                        .HasColumnType("integer");

                    b.Property<string>("email")
                        .HasColumnType("text");

                    b.Property<string>("password")
                        .HasColumnType("text");

                    b.Property<string>("username")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserTypeId");

                    b.HasIndex("clubId");

                    b.ToTable("users");
                });

            modelBuilder.Entity("Mara_Carona.Models.UserType", b =>
                {
                    b.Property<int>("UserTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("type")
                        .HasColumnType("text");

                    b.HasKey("UserTypeId");

                    b.ToTable("usersType");
                });

            modelBuilder.Entity("Mara_Carona.Models.Fixture", b =>
                {
                    b.HasOne("Mara_Carona.Models.Club", "Club")
                        .WithMany()
                        .HasForeignKey("clubId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Mara_Carona.Models.Hub.Message", b =>
                {
                    b.HasOne("Mara_Carona.Models.User", "UserFrom")
                        .WithMany()
                        .HasForeignKey("UserFromId");

                    b.HasOne("Mara_Carona.Models.User", "UserTo")
                        .WithMany()
                        .HasForeignKey("UserToId");
                });

            modelBuilder.Entity("Mara_Carona.Models.User", b =>
                {
                    b.HasOne("Mara_Carona.Models.UserType", "UserType")
                        .WithMany()
                        .HasForeignKey("UserTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mara_Carona.Models.Club", "Club")
                        .WithMany()
                        .HasForeignKey("clubId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
